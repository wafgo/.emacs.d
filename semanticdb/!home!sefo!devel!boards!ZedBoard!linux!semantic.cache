;; Object linux/
;; SEMANTICDB Tags save file
(semanticdb-project-database-file "linux/"
  :tables
  (list
    (semanticdb-table "Makefile"
      :major-mode 'makefile-gmake-mode
      :tags 
        '( ("VERSION" variable (:default-value ("4")) nil [1 13])
            ("PATCHLEVEL" variable (:default-value ("6")) nil [13 28])
            ("SUBLEVEL" variable (:default-value ("0")) nil [28 41])
            ("EXTRAVERSION" variable nil nil [41 56])
            ("NAME" variable (:default-value ("Charred" "Weasel")) nil [56 78])
            ("MAKEFLAGS" variable (:default-value ("-rR" "--include-dir=$(CURDIR)")) nil [503 544])
            ("LC_COLLATE" variable (:default-value ("C")) nil [602 615])
            ("LC_NUMERIC" variable (:default-value ("C")) nil [615 628])
            ("PHONY" variable (:default-value ("_all")) nil [3959 3973])
            ("_all" function nil nil [3973 3979])
            ("Makefile" function (:arguments (";")) nil [4020 4051])
            ("$(CURDIR)" function (:arguments (";")) nil [4020 4051])
            ("saved-output" variable (:default-value ("$(KBUILD_OUTPUT)")) nil [4203 4236])
            ("KBUILD_OUTPUT" variable (:default-value ("$(shell mkdir -p $(KBUILD_OUTPUT) && cd $(KBUILD_OUTPUT) \\
								&& /bin/pwd)")) nil [4236 4333])
            ("PHONY" variable (:default-value ("$(MAKECMDGOALS)" "sub-make")) nil [4427 4461])
            ("_all" function (:arguments ("sub-make")) nil [4462 4545])
            ("$(filter-out _all sub-make $(CURDIR)/Makefile, $(MAKECMDGOALS))" function (:arguments ("sub-make")) nil [4462 4545])
            ("sub-make" function (:arguments ("FORCE")) nil [4546 4685])
            ("skip-makefile" variable (:default-value ("1")) nil [4733 4752])
            ("MAKEFLAGS" variable (:default-value ("--no-print-directory")) nil [5094 5128])
            ("PHONY" variable (:default-value ("all")) nil [6029 6042])
            ("_all" function (:arguments ("all")) nil [6067 6077])
            ("_all" function (:arguments ("modules")) nil [6082 6096])
            ("objtree" variable (:default-value (".")) nil [6404 6418])
            ("src" variable (:default-value ("$(srctree)")) nil [6418 6437])
            ("obj" variable (:default-value ("$(objtree)")) nil [6437 6456])
            ("VPATH" variable (:default-value ("$(srctree)$(if $(KBUILD_EXTMOD),:$(KBUILD_EXTMOD))")) nil [6457 6518])
            ("SUBARCH" variable (:default-value ("$(shell uname -m | sed -e s/i.86/x86/ -e s/x86_64/x86/ \\
				  -e s/sun4u/sparc64/ \\
				  -e s/arm.*/arm/ -e s/sa110/arm/ \\
				  -e s/s390x/s390/ -e s/parisc64/parisc/ \\
				  -e s/ppc.*/powerpc/ -e s/mips.*/mips/ \\
				  -e s/sh[234].*/sh/ -e s/aarch64.*/arm64/ )")) nil [6885 7163])
            ("UTS_MACHINE" variable (:default-value ("$(ARCH)")) nil [8312 8336])
            ("SRCARCH" variable (:default-value ("$(ARCH)")) nil [8336 8356])
            ("hdr-arch" variable (:default-value ("$(SRCARCH)")) nil [8899 8923])
            ("CONFIG_SHELL" variable (:default-value ("$(shell if [ -x \"$$BASH\" ]; then echo $$BASH; \\
	  else if [ -x /bin/bash ]; then echo /bin/bash; \\
	  else echo sh; fi ; fi)")) nil [8996 9138])
            ("HOSTCC" variable (:default-value ("gcc")) nil [9139 9158])
            ("HOSTCXX" variable (:default-value ("g++")) nil [9158 9177])
            ("HOSTCFLAGS" variable (:default-value ("-Wall" "-Wmissing-prototypes" "-Wstrict-prototypes" "-O2" "-fomit-frame-pointer" "-std=gnu89")) nil [9177 9275])
            ("HOSTCXXFLAGS" variable (:default-value ("-O2")) nil [9275 9294])
            ("HOSTCFLAGS" variable (:default-value ("-Wno-unused-value" "-Wno-unused-parameter" "-Wno-missing-field-initializers" "-fno-delete-null-pointer-checks")) nil [9358 9481])
            ("KBUILD_MODULES" variable nil nil [9573 9591])
            ("KBUILD_BUILTIN" variable (:default-value ("1")) nil [9591 9611])
            ("scripts/Kbuild.include" function (:arguments (";")) nil [10403 10429])
            ("scripts/Kbuild.include" include nil nil [10429 10460])
            ("AS" variable (:default-value ("$(CROSS_COMPILE)as")) nil [10491 10516])
            ("LD" variable (:default-value ("$(CROSS_COMPILE)ld")) nil [10516 10541])
            ("CC" variable (:default-value ("$(CROSS_COMPILE)gcc")) nil [10541 10567])
            ("CPP" variable (:default-value ("$(CC)" "-E")) nil [10567 10583])
            ("AR" variable (:default-value ("$(CROSS_COMPILE)ar")) nil [10583 10608])
            ("NM" variable (:default-value ("$(CROSS_COMPILE)nm")) nil [10608 10633])
            ("STRIP" variable (:default-value ("$(CROSS_COMPILE)strip")) nil [10633 10664])
            ("OBJCOPY" variable (:default-value ("$(CROSS_COMPILE)objcopy")) nil [10664 10699])
            ("OBJDUMP" variable (:default-value ("$(CROSS_COMPILE)objdump")) nil [10699 10734])
            ("AWK" variable (:default-value ("awk")) nil [10734 10745])
            ("GENKSYMS" variable (:default-value ("scripts/genksyms/genksyms")) nil [10745 10782])
            ("INSTALLKERNEL" variable (:default-value ("installkernel")) nil [10782 10814])
            ("DEPMOD" variable (:default-value ("/sbin/depmod")) nil [10814 10837])
            ("PERL" variable (:default-value ("perl")) nil [10837 10850])
            ("PYTHON" variable (:default-value ("python")) nil [10850 10867])
            ("CHECK" variable (:default-value ("sparse")) nil [10867 10883])
            ("CHECKFLAGS" variable (:default-value ("-D__linux__" "-Dlinux" "-D__STDC__" "-Dunix" "-D__unix__" "-Wbitwise" "-Wno-return-void" "$(CF)")) nil [10884 10990])
            ("CFLAGS_MODULE" variable nil nil [10990 11008])
            ("AFLAGS_MODULE" variable nil nil [11008 11026])
            ("LDFLAGS_MODULE" variable nil nil [11026 11044])
            ("CFLAGS_KERNEL" variable nil nil [11044 11060])
            ("AFLAGS_KERNEL" variable nil nil [11060 11076])
            ("CFLAGS_GCOV" variable (:default-value ("-fprofile-arcs" "-ftest-coverage")) nil [11076 11121])
            ("CFLAGS_KCOV" variable (:default-value ("-fsanitize-coverage=trace-pc")) nil [11121 11164])
            ("USERINCLUDE" variable (:default-value ("-I$(srctree)/arch/$(hdr-arch)/include/uapi" "-Iarch/$(hdr-arch)/include/generated/uapi" "-I$(srctree)/include/uapi" "-Iinclude/generated/uapi" "-include" "$(srctree)/include/linux/kconfig.h")) nil [11235 11467])
            ("LINUXINCLUDE" variable (:default-value ("-I$(srctree)/arch/$(hdr-arch)/include" "-Iarch/$(hdr-arch)/include/generated/uapi" "-Iarch/$(hdr-arch)/include/generated" "$(if $(KBUILD_SRC), -I$(srctree)/include)" "-Iinclude" "$(USERINCLUDE)")) nil [11580 11807])
            ("KBUILD_CPPFLAGS" variable (:default-value ("-D__KERNEL__")) nil [11808 11840])
            ("KBUILD_CFLAGS" variable (:default-value ("-Wall" "-Wundef" "-Wstrict-prototypes" "-Wno-trigraphs" "-fno-strict-aliasing" "-fno-common" "-Werror-implicit-function-declaration" "-Wno-format-security" "-std=gnu89")) nil [11841 12040])
            ("KBUILD_AFLAGS_KERNEL" variable nil nil [12041 12065])
            ("KBUILD_CFLAGS_KERNEL" variable nil nil [12065 12089])
            ("KBUILD_AFLAGS" variable (:default-value ("-D__ASSEMBLY__")) nil [12089 12123])
            ("KBUILD_AFLAGS_MODULE" variable (:default-value ("-DMODULE")) nil [12123 12157])
            ("KBUILD_CFLAGS_MODULE" variable (:default-value ("-DMODULE")) nil [12157 12191])
            ("KBUILD_LDFLAGS_MODULE" variable (:default-value ("-T" "$(srctree)/scripts/module-common.lds")) nil [12191 12256])
            ("KERNELRELEASE" variable (:default-value ("$(shell cat include/config/kernel.release 2> /dev/null)")) nil [12328 12400])
            ("KERNELVERSION" variable (:default-value ("$(VERSION)$(if $(PATCHLEVEL),.$(PATCHLEVEL)$(if $(SUBLEVEL),.$(SUBLEVEL)))$(EXTRAVERSION)")) nil [12400 12506])
            ("MODVERDIR" function (:arguments ("=" "$(if $(KBUILD_EXTMOD),$(firstword $(KBUILD_EXTMOD))/).tmp_versions")) nil [13318 13405])
            ("export" function (:arguments ("=" "$(if $(KBUILD_EXTMOD),$(firstword $(KBUILD_EXTMOD))/).tmp_versions")) nil [13318 13405])
            ("RCS_FIND_IGNORE" function (:arguments ("=" "\\( -name SCCS -o -name BitKeeper -o -name .svn -o    \\
			  -name CVS -o -name .pc -o -name .hg -o -name .git \\)" "-prune" "-o")) nil [13448 13604])
            ("export" function (:arguments ("=" "\\( -name SCCS -o -name BitKeeper -o -name .svn -o    \\
			  -name CVS -o -name .pc -o -name .hg -o -name .git \\)" "-prune" "-o")) nil [13448 13604])
            ("RCS_TAR_IGNORE" function (:arguments ("=" "--exclude" "SCCS" "--exclude" "BitKeeper" "--exclude" ".svn" "--exclude" "CVS" "--exclude" ".pc" "--exclude" ".hg" "--exclude" ".git")) nil [13604 13742])
            ("export" function (:arguments ("=" "--exclude" "SCCS" "--exclude" "BitKeeper" "--exclude" ".svn" "--exclude" "CVS" "--exclude" ".pc" "--exclude" ".hg" "--exclude" ".git")) nil [13604 13742])
            ("PHONY" variable (:default-value ("scripts_basic")) nil [13913 13936])
            ("scripts_basic" function nil nil [13936 14022])
            ("scripts/basic/%" function (:arguments ("scripts_basic" ";")) nil [14089 14122])
            ("PHONY" variable (:default-value ("outputmakefile")) nil [14123 14147])
            ("outputmakefile" function nil nil [14312 14328])
            ("PHONY" variable (:default-value ("asm-generic")) nil [14545 14566])
            ("asm-generic" function nil nil [14566 14831])
            ("version_h" variable (:default-value ("include/generated/uapi/linux/version.h")) nil [15264 15316])
            ("old_version_h" variable (:default-value ("include/linux/version.h")) nil [15316 15357])
            ("no-dot-config-targets" variable (:default-value ("clean" "mrproper" "distclean" "cscope" "gtags" "TAGS" "tags" "help%" "%docs" "check%" "coccicheck" "$(version_h)" "headers_%" "archheaders" "archscripts" "kernelversion" "%src-pkg")) nil [15358 15549])
            ("config-targets" variable (:default-value ("0")) nil [15550 15570])
            ("mixed-targets" variable (:default-value ("0")) nil [15570 15590])
            ("dot-config" variable (:default-value ("1")) nil [15590 15610])
            ("PHONY" variable (:default-value ("$(MAKECMDGOALS)" "__build_one_by_one")) nil [16432 16476])
            ("$(filter-out __build_one_by_one, $(MAKECMDGOALS))" function (:arguments ("__build_one_by_one")) nil [16477 16551])
            ("__build_one_by_one" function nil nil [16552 16665])
            ("arch/$(SRCARCH)/Makefile" include nil nil [17062 17095])
            ("config" function (:arguments ("scripts_basic" "outputmakefile" "FORCE")) nil [17135 17219])
            ("%config" function (:arguments ("scripts_basic" "outputmakefile" "FORCE")) nil [17220 17305])
            ("PHONY" variable (:default-value ("scripts")) nil [17682 17699])
            ("scripts" function (:arguments ("scripts_basic" "include/config/auto.conf" "include/config/tristate.conf" "asm-generic")) nil [17699 17819])
            ("init-y" variable (:default-value ("init/")) nil [17883 17900])
            ("drivers-y" variable (:default-value ("drivers/" "sound/" "firmware/")) nil [17900 17939])
            ("net-y" variable (:default-value ("net/")) nil [17939 17954])
            ("libs-y" variable (:default-value ("lib/")) nil [17954 17970])
            ("core-y" variable (:default-value ("usr/")) nil [17970 17986])
            ("virt-y" variable (:default-value ("virt/")) nil [17986 18003])
            ("include/config/auto.conf.cmd" function (:arguments (";")) nil [18330 18380])
            ("$(KCONFIG_CONFIG)" function (:arguments (";")) nil [18330 18380])
            ("include/config/%.conf" function (:arguments ("$(KCONFIG_CONFIG)" "include/config/auto.conf.cmd")) nil [18638 18760])
            ("PHONY" variable (:default-value ("include/config/auto.conf")) nil [18924 18958])
            ("include/config/auto.conf" function nil nil [18959 19311])
            ("include/config/auto.conf" function (:arguments (";")) nil [19392 19420])
            ("all" function (:arguments ("vmlinux")) nil [19674 19687])
            ("ARCH_CPPFLAGS" variable nil nil [19806 19823])
            ("ARCH_AFLAGS" variable nil nil [19823 19838])
            ("ARCH_CFLAGS" variable nil nil [19838 19853])
            ("arch/$(SRCARCH)/Makefile" include nil nil [19853 19886])
            ("KBUILD_CFLAGS" variable (:default-value ("$(call cc-option,-fno-delete-null-pointer-checks,)")) nil [19887 19955])
            ("KBUILD_CFLAGS" variable (:default-value ("-Os" "$(call cc-disable-warning,maybe-uninitialized,)")) nil [19990 20059])
            ("KBUILD_CFLAGS" variable (:default-value ("-O2")) nil [20064 20085])
            ("KBUILD_CFLAGS" variable (:default-value ("$(call cc-option,--param=allow-store-data-races=0)")) nil [20164 20232])
            ("KBUILD_CFLAGS" variable (:default-value ("$(call cc-option,-fno-reorder-blocks,)" "$(call cc-option,-fno-ipa-cp-clone,)" "$(call cc-option,-fno-partial-inlining)")) nil [20480 20651])
            ("KBUILD_CFLAGS" variable (:default-value ("$(call cc-option,-Wframe-larger-than=${CONFIG_FRAME_WARN})")) nil [20689 20765])
            ("KBUILD_CFLAGS" variable (:default-value ("$(stackp-flag)")) nil [22311 22343])
            ("KBUILD_CPPFLAGS" variable (:default-value ("$(call cc-option,-Qunused-arguments,)")) nil [22575 22632])
            ("KBUILD_CPPFLAGS" variable (:default-value ("$(call cc-option,-Wno-unknown-warning-option,)")) nil [22632 22698])
            ("KBUILD_CFLAGS" variable (:default-value ("$(call cc-disable-warning, unused-variable)")) nil [22698 22759])
            ("KBUILD_CFLAGS" variable (:default-value ("$(call cc-disable-warning, format-invalid-specifier)")) nil [22759 22829])
            ("KBUILD_CFLAGS" variable (:default-value ("$(call cc-disable-warning, gnu)")) nil [22829 22878])
            ("KBUILD_CFLAGS" variable (:default-value ("$(call cc-disable-warning, tautological-compare)")) nil [22955 23021])
            ("KBUILD_CFLAGS" variable (:default-value ("$(call cc-option, -mno-global-merge,)")) nil [23208 23263])
            ("KBUILD_CFLAGS" variable (:default-value ("$(call cc-option, -fcatch-undefined-behavior)")) nil [23263 23326])
            ("KBUILD_CFLAGS" variable (:default-value ("$(call cc-disable-warning, unused-but-set-variable)")) nil [23459 23528])
            ("KBUILD_CFLAGS" variable (:default-value ("-fno-omit-frame-pointer" "-fno-optimize-sibling-calls")) nil [23562 23631])
            ("KBUILD_CFLAGS" variable (:default-value ("-fomit-frame-pointer")) nil [23999 24037])
            ("KBUILD_CFLAGS" variable (:default-value ("$(call cc-option, -fno-var-tracking-assignments)")) nil [24050 24118])
            ("KBUILD_CFLAGS" variable (:default-value ("$(call cc-option, -gsplit-dwarf, -g)")) nil [24173 24229])
            ("KBUILD_CFLAGS" variable (:default-value ("-g")) nil [24234 24254])
            ("KBUILD_AFLAGS" variable (:default-value ("-Wa,-gdwarf-2")) nil [24260 24291])
            ("KBUILD_CFLAGS" variable (:default-value ("$(call cc-option, -gdwarf-4,)")) nil [24328 24375])
            ("KBUILD_CFLAGS" variable (:default-value ("$(call cc-option, -femit-struct-debug-baseonly)" "$(call cc-option,-fno-var-tracking)")) nil [24414 24523])
            ("CC_FLAGS_FTRACE" variable (:default-value ("-pg")) nil [24582 24605])
            ("CC_USING_FENTRY" variable (:default-value ("$(call cc-option, -mfentry -DCC_USING_FENTRY)")) nil [24659 24724])
            ("KBUILD_CFLAGS" variable (:default-value ("$(CC_FLAGS_FTRACE)" "$(CC_USING_FENTRY)")) nil [24730 24785])
            ("KBUILD_AFLAGS" variable (:default-value ("$(CC_USING_FENTRY)")) nil [24785 24821])
            ("KBUILD_CFLAGS" variable (:default-value ("$(call cc-option, -fno-inline-functions-called-once)")) nil [25051 25121])
            ("NOSTDINC_FLAGS" variable (:default-value ("-nostdinc" "-isystem" "$(shell $(CC) -print-file-name=include)")) nil [25205 25282])
            ("CHECKFLAGS" variable (:default-value ("$(NOSTDINC_FLAGS)")) nil [25282 25318])
            ("KBUILD_CFLAGS" variable (:default-value ("$(call cc-option,-Wdeclaration-after-statement,)")) nil [25364 25430])
            ("KBUILD_CFLAGS" variable (:default-value ("$(call cc-disable-warning, pointer-sign)")) nil [25487 25545])
            ("KBUILD_CFLAGS" variable (:default-value ("$(call cc-option,-fno-strict-overflow)")) nil [25613 25669])
            ("KBUILD_CFLAGS" variable (:default-value ("$(call cc-option,-fconserve-stack)")) nil [25700 25754])
            ("KBUILD_CFLAGS" variable (:default-value ("$(call cc-option,-Werror=implicit-int)")) nil [25817 25875])
            ("KBUILD_CFLAGS" variable (:default-value ("$(call cc-option,-Werror=strict-prototypes)")) nil [25951 26014])
            ("KBUILD_CFLAGS" variable (:default-value ("$(call cc-option,-Werror=date-time)")) nil [26089 26144])
            ("KBUILD_ARFLAGS" variable (:default-value ("$(call ar-option,D)")) nil [26193 26231])
            ("scripts/Makefile.kasan" include nil nil [26408 26439])
            ("scripts/Makefile.extrawarn" include nil nil [26439 26474])
            ("scripts/Makefile.ubsan" include nil nil [26474 26505])
            ("KBUILD_CPPFLAGS" variable (:default-value ("$(ARCH_CPPFLAGS)" "$(KCPPFLAGS)")) nil [26603 26652])
            ("KBUILD_AFLAGS" variable (:default-value ("$(ARCH_AFLAGS)" "$(KAFLAGS)")) nil [26652 26699])
            ("KBUILD_CFLAGS" variable (:default-value ("$(ARCH_CFLAGS)" "$(KCFLAGS)")) nil [26699 26746])
            ("LDFLAGS_BUILD_ID" variable (:default-value ("$(patsubst -Wl$(comma)%,%,\\
			      $(call cc-ldoption, -Wl$(comma)--build-id,))")) nil [26780 26881])
            ("KBUILD_LDFLAGS_MODULE" variable (:default-value ("$(LDFLAGS_BUILD_ID)")) nil [26881 26926])
            ("LDFLAGS_vmlinux" variable (:default-value ("$(LDFLAGS_BUILD_ID)")) nil [26926 26965])
            ("LDFLAGS_vmlinux" variable (:default-value ("$(call ld-option, -X,)")) nil [27000 27042])
            ("MODLIB" variable (:default-value ("$(INSTALL_MOD_PATH)/lib/modules/$(KERNELRELEASE)")) nil [27993 28051])
            ("mod_strip_cmd" variable (:default-value ("$(STRIP)" "--strip-debug")) nil [28390 28429])
            ("mod_strip_cmd" variable (:default-value ("$(STRIP)" "$(INSTALL_MOD_STRIP)")) nil [28434 28480])
            ("mod_strip_cmd" variable (:default-value ("true")) nil [28513 28534])
            ("mod_compress_cmd" variable (:default-value ("true")) nil [28761 28785])
            ("INITRD_COMPRESS-y" variable (:default-value ("gzip")) nil [29222 29265])
            ("INITRD_COMPRESS-" function (:arguments ("=" "bzip2")) nil [29265 29309])
            ("INITRD_COMPRESS-" function (:arguments ("=" "lzma")) nil [29309 29352])
            ("INITRD_COMPRESS-" function (:arguments ("=" "xz")) nil [29352 29393])
            ("INITRD_COMPRESS-" function (:arguments ("=" "lzo")) nil [29393 29435])
            ("INITRD_COMPRESS-" function (:arguments ("=" "lz4")) nil [29435 29477])
            ("mod_sign_cmd" variable (:default-value ("scripts/sign-file" "$(CONFIG_MODULE_SIG_HASH)" "$(MODULE_SIG_KEY_SRCPREFIX)$(CONFIG_MODULE_SIG_KEY)" "certs/signing_key.x509")) nil [29704 29838])
            ("mod_sign_cmd" variable (:default-value ("true")) nil [29843 29863])
            ("core-y" variable (:default-value ("kernel/" "certs/" "mm/" "fs/" "ipc/" "security/" "crypto/" "block/")) nil [29916 29980])
            ("vmlinux-dirs" variable (:default-value ("$(patsubst %/,%,$(filter %/, $(init-y) $(init-m) \\
		     $(core-y) $(core-m) $(drivers-y) $(drivers-m) \\
		     $(net-y) $(net-m) $(libs-y) $(libs-m) $(virt-y)))")) nil [29981 30160])
            ("vmlinux-alldirs" variable (:default-value ("$(sort $(vmlinux-dirs) $(patsubst %/,%,$(filter %/, \\
		     $(init-) $(core-) $(drivers-) $(net-) $(libs-) $(virt-))))")) nil [30161 30300])
            ("init-y" variable (:default-value ("$(patsubst %/, %/built-in.o, $(init-y))")) nil [30301 30352])
            ("core-y" variable (:default-value ("$(patsubst %/, %/built-in.o, $(core-y))")) nil [30352 30403])
            ("drivers-y" variable (:default-value ("$(patsubst %/, %/built-in.o, $(drivers-y))")) nil [30403 30459])
            ("net-y" variable (:default-value ("$(patsubst %/, %/built-in.o, $(net-y))")) nil [30459 30508])
            ("libs-y1" variable (:default-value ("$(patsubst %/, %/lib.a, $(libs-y))")) nil [30508 30555])
            ("libs-y2" variable (:default-value ("$(patsubst %/, %/built-in.o, $(libs-y))")) nil [30555 30607])
            ("libs-y" variable (:default-value ("$(libs-y1)" "$(libs-y2)")) nil [30607 30640])
            ("virt-y" variable (:default-value ("$(patsubst %/, %/built-in.o, $(virt-y))")) nil [30640 30691])
            ("KBUILD_VMLINUX_INIT" function (:arguments ("=" "$(head-y)" "$(init-y)")) nil [30747 30797])
            ("export" function (:arguments ("=" "$(head-y)" "$(init-y)")) nil [30747 30797])
            ("KBUILD_VMLINUX_MAIN" function (:arguments ("=" "$(core-y)" "$(libs-y)" "$(drivers-y)" "$(net-y)" "$(virt-y)")) nil [30797 30879])
            ("export" function (:arguments ("=" "$(core-y)" "$(libs-y)" "$(drivers-y)" "$(net-y)" "$(virt-y)")) nil [30797 30879])
            ("KBUILD_LDS" function (:arguments ("=" "arch/$(SRCARCH)/kernel/vmlinux.lds")) nil [30879 30944])
            ("export" function (:arguments ("=" "arch/$(SRCARCH)/kernel/vmlinux.lds")) nil [30879 30944])
            ("KBUILD_ALLDIRS" function (:arguments ("=" "$(sort $(filter-out arch/%,$(vmlinux-alldirs)) arch Documentation include samples scripts tools)")) nil [31002 31124])
            ("export" function (:arguments ("=" "$(sort $(filter-out arch/%,$(vmlinux-alldirs)) arch Documentation include samples scripts tools)")) nil [31002 31124])
            ("vmlinux-deps" variable (:default-value ("$(KBUILD_LDS)" "$(KBUILD_VMLINUX_INIT)" "$(KBUILD_VMLINUX_MAIN)")) nil [31125 31201])
            ("quiet_cmd_link-vmlinux" variable (:default-value ("LINK" "$@")) nil [31306 31342])
            ("vmlinux" function (:arguments ("scripts/link-vmlinux.sh" "$(vmlinux-deps)" "FORCE")) nil [31431 31486])
            ("$(sort $(vmlinux-deps))" function (:arguments ("$(vmlinux-dirs)" ";")) nil [31918 31961])
            ("PHONY" variable (:default-value ("$(vmlinux-dirs)")) nil [32246 32271])
            ("$(vmlinux-dirs)" function (:arguments ("prepare" "scripts")) nil [32271 32329])
            ("include/config/kernel.release" function (:arguments ("include/config/auto.conf" "FORCE")) nil [32525 32619])
            ("PHONY" variable (:default-value ("prepare" "archprepare" "prepare0" "prepare1" "prepare2" "prepare3")) nil [32965 33030])
            ("prepare3" function (:arguments ("include/config/kernel.release")) nil [33198 33238])
            ("prepare2" function (:arguments ("prepare3" "outputmakefile" "asm-generic")) nil [33601 33647])
            ("prepare1" function (:arguments ("prepare2" "$(version_h)" "include/generated/utsrelease.h" "include/config/auto.conf")) nil [33648 33777])
            ("archprepare" function (:arguments ("archheaders" "archscripts" "prepare1" "scripts_basic")) nil [33778 33838])
            ("prepare0" function (:arguments ("archprepare" "FORCE")) nil [33839 33891])
            ("prepare" function (:arguments ("prepare0" "prepare-objtool")) nil [33914 33948])
            ("PHONY" variable (:default-value ("prepare-objtool")) nil [34334 34359])
            ("prepare-objtool" function (:arguments ("$(objtool_target)")) nil [34359 34394])
            ("uts_len" variable (:default-value ("64")) nil [34632 34646])
            ("$(version_h)" function (:arguments ("$(srctree)/Makefile" "FORCE")) nil [35251 35346])
            ("include/generated/utsrelease.h" function (:arguments ("include/config/kernel.release" "FORCE")) nil [35347 35445])
            ("PHONY" variable (:default-value ("headerdep")) nil [35446 35465])
            ("headerdep" function nil nil [35465 35595])
            ("INSTALL_FW_PATH" variable (:default-value ("$(INSTALL_MOD_PATH)/lib/firmware")) nil [35693 35742])
            ("PHONY" variable (:default-value ("firmware_install")) nil [35766 35792])
            ("firmware_install" function (:arguments ("FORCE")) nil [35792 35924])
            ("hdr-dst" variable (:default-value ("$(if $(KBUILD_HEADERS), dst=include/asm-$(hdr-arch), dst=include/asm)")) nil [36161 36241])
            ("PHONY" variable (:default-value ("archheaders")) nil [36242 36263])
            ("archheaders" function nil nil [36263 36276])
            ("PHONY" variable (:default-value ("archscripts")) nil [36277 36298])
            ("archscripts" function nil nil [36298 36311])
            ("PHONY" variable (:default-value ("__headers")) nil [36312 36331])
            ("__headers" function (:arguments ("$(version_h)" "scripts_basic" "asm-generic" "archheaders" "archscripts" "FORCE")) nil [36331 36455])
            ("PHONY" variable (:default-value ("headers_install_all")) nil [36456 36485])
            ("headers_install_all" function nil nil [36485 36565])
            ("PHONY" variable (:default-value ("headers_install")) nil [36566 36591])
            ("headers_install" function (:arguments ("__headers")) nil [36591 36868])
            ("PHONY" variable (:default-value ("headers_check_all")) nil [36869 36896])
            ("headers_check_all" function (:arguments ("headers_install_all")) nil [36896 36992])
            ("PHONY" variable (:default-value ("headers_check")) nil [36993 37016])
            ("headers_check" function (:arguments ("headers_install")) nil [37016 37177])
            ("PHONY" variable (:default-value ("kselftest")) nil [37275 37294])
            ("kselftest" function nil nil [37294 37355])
            ("kselftest-clean" function nil nil [37356 37419])
            ("PHONY" variable (:default-value ("kselftest-merge")) nil [37420 37445])
            ("kselftest-merge" function nil nil [37445 37744])
            ("all" function (:arguments ("modules")) nil [37893 37906])
            ("PHONY" variable (:default-value ("modules")) nil [38100 38117])
            ("modules" function (:arguments ("$(vmlinux-dirs)" "$(if $(KBUILD_BUILTIN),vmlinux)" "modules.builtin")) nil [38117 38459])
            ("modules.builtin" function (:arguments ("$(vmlinux-dirs:%=%/modules.builtin)")) nil [38460 38569])
            ("%/modules.builtin" function (:arguments ("include/config/auto.conf")) nil [38570 38644])
            ("PHONY" variable (:default-value ("modules_prepare")) nil [38692 38717])
            ("modules_prepare" function (:arguments ("prepare" "scripts")) nil [38717 38750])
            ("PHONY" variable (:default-value ("modules_install")) nil [38779 38804])
            ("modules_install" function (:arguments ("_modinst_" "_modinst_post")) nil [38804 38845])
            ("PHONY" variable (:default-value ("_modinst_")) nil [38846 38865])
            ("_modinst_" function nil nil [38865 39271])
            ("PHONY" variable (:default-value ("_modinst_post")) nil [39445 39468])
            ("_modinst_post" function (:arguments ("_modinst_")) nil [39468 39590])
            ("PHONY" variable (:default-value ("modules_sign")) nil [39622 39644])
            ("modules_sign" function nil nil [39644 39710])
            ("modules_install" function (:arguments ("FORCE")) nil [39844 40104])
            ("modules" function (:arguments ("FORCE")) nil [39844 40104])
            ("CLEAN_DIRS" variable (:default-value ("$(MODVERDIR)")) nil [40473 40501])
            ("MRPROPER_DIRS" variable (:default-value ("include/config" "usr/include" "include/generated" "arch/*/include/generated" ".tmp_objdiff")) nil [40553 40669])
            ("MRPROPER_FILES" variable (:default-value (".config" ".config.old" ".version" ".old_version" "Module.symvers" "tags" "TAGS" "cscope*" "GPATH" "GTAGS" "GRTAGS" "GSYMS" "signing_key.pem" "signing_key.priv" "signing_key.x509" "x509.genkey" "extra_certificates" "signing_key.x509.keyid" "signing_key.x509.signer" "vmlinux-gdb.py")) nil [40669 40954])
            ("clean" function (:arguments ("rm-dirs" ":=" "$(CLEAN_DIRS)")) nil [41023 41056])
            ("clean" function (:arguments ("rm-files" ":=" "$(CLEAN_FILES)")) nil [41056 41090])
            ("clean-dirs" variable (:default-value ("$(addprefix _clean_, . $(vmlinux-alldirs) Documentation samples)")) nil [41090 41174])
            ("PHONY" variable (:default-value ("$(clean-dirs)" "clean" "archclean" "vmlinuxclean")) nil [41175 41227])
            ("$(clean-dirs)" function nil nil [41227 41290])
            ("vmlinuxclean" function nil nil [41291 41367])
            ("clean" function (:arguments ("archclean" "vmlinuxclean")) nil [41368 41398])
            ("mrproper" function (:arguments ("rm-dirs" ":=" "$(wildcard $(MRPROPER_DIRS))")) nil [41460 41511])
            ("mrproper" function (:arguments ("rm-files" ":=" "$(wildcard $(MRPROPER_FILES))")) nil [41511 41563])
            ("mrproper-dirs" variable (:default-value ("$(addprefix _mrproper_,Documentation/DocBook scripts)")) nil [41563 41639])
            ("PHONY" variable (:default-value ("$(mrproper-dirs)" "mrproper" "archmrproper")) nil [41640 41688])
            ("$(mrproper-dirs)" function nil nil [41688 41757])
            ("mrproper" function (:arguments ("clean" "archmrproper" "$(mrproper-dirs)")) nil [41758 41845])
            ("PHONY" variable (:default-value ("distclean")) nil [41860 41879])
            ("distclean" function (:arguments ("mrproper")) nil [41880 42134])
            ("package-dir" variable (:default-value ("scripts/package")) nil [42304 42335])
            ("%src-pkg" function (:arguments ("FORCE")) nil [42336 42392])
            ("%pkg" function (:arguments ("include/config/kernel.release" "FORCE")) nil [42392 42474])
            ("rpm" function (:arguments ("include/config/kernel.release" "FORCE")) nil [42474 42555])
            ("boards" variable (:default-value ("$(wildcard $(srctree)/arch/$(SRCARCH)/configs/*_defconfig)")) nil [42686 42755])
            ("boards" variable (:default-value ("$(sort $(notdir $(boards)))")) nil [42755 42793])
            ("board-dirs" variable (:default-value ("$(dir $(wildcard $(srctree)/arch/$(SRCARCH)/configs/*/*_defconfig))")) nil [42793 42875])
            ("board-dirs" variable (:default-value ("$(sort $(notdir $(board-dirs:/=)))")) nil [42875 42924])
            ("help" function nil nil [42925 46421])
            ("help-board-dirs" variable (:default-value ("$(addprefix help-,$(board-dirs))")) nil [47386 47438])
            ("help-boards" function (:arguments ("$(help-board-dirs)")) nil [47439 47471])
            ("boards-per-dir" variable (:default-value ("$(sort $(notdir $(wildcard $(srctree)/arch/$(SRCARCH)/configs/$*/*_defconfig)))")) nil [47472 47569])
            ("$(help-board-dirs)" function (:arguments ("help-%:")) nil [47570 47805])
            ("%docs" function (:arguments ("scripts_basic" "FORCE")) nil [47909 48048])
            ("KBUILD_MODULES" variable (:default-value ("1")) nil [48831 48851])
            ("PHONY" variable (:default-value ("crmodverdir")) nil [48851 48872])
            ("crmodverdir" function nil nil [48872 48905])
            ("PHONY" variable (:default-value ("$(objtree)/Module.symvers")) nil [48906 48941])
            ("$(objtree)" function nil nil [48941 49181])
            ("module-dirs" variable (:default-value ("$(addprefix _module_,$(KBUILD_EXTMOD))")) nil [49182 49236])
            ("PHONY" variable (:default-value ("$(module-dirs)" "modules")) nil [49236 49268])
            ("$(module-dirs)" function (:arguments ("crmodverdir" "$(objtree)/Module.symvers")) nil [49268 49371])
            ("modules" function (:arguments ("$(module-dirs)")) nil [49372 49491])
            ("PHONY" variable (:default-value ("modules_install")) nil [49492 49517])
            ("modules_install" function (:arguments ("_emodinst_" "_emodinst_post")) nil [49517 49560])
            ("install-dir" variable (:default-value ("$(if $(INSTALL_MOD_DIR),$(INSTALL_MOD_DIR),extra)")) nil [49561 49626])
            ("PHONY" variable (:default-value ("_emodinst_")) nil [49626 49646])
            ("_emodinst_" function nil nil [49646 49749])
            ("PHONY" variable (:default-value ("_emodinst_post")) nil [49750 49774])
            ("_emodinst_post" function (:arguments ("_emodinst_")) nil [49774 49821])
            ("clean-dirs" variable (:default-value ("$(addprefix _clean_,$(KBUILD_EXTMOD))")) nil [49822 49874])
            ("PHONY" variable (:default-value ("$(clean-dirs)" "clean")) nil [49875 49904])
            ("$(clean-dirs)" function nil nil [49904 49967])
            ("clean" function (:arguments ("rm-dirs" ":=" "$(MODVERDIR)")) nil [49968 49999])
            ("clean" function (:arguments ("rm-files" ":=" "$(KBUILD_EXTMOD)/Module.symvers")) nil [49999 50050])
            ("help" function nil nil [50051 50373])
            ("PHONY" variable (:default-value ("prepare" "scripts")) nil [50387 50412])
            ("prepare" function (:arguments (";")) nil [50412 50423])
            ("scripts" function (:arguments (";")) nil [50423 50434])
            ("clean" function (:arguments ("$(clean-dirs)")) nil [50457 50924])
            ("quiet_cmd_tags" variable (:default-value ("GEN" "$@")) nil [51031 51059])
            ("TAGS" function (:arguments ("FORCE")) nil [51123 51171])
            ("tags" function (:arguments ("FORCE")) nil [51123 51171])
            ("PHONY" variable (:default-value ("includecheck" "versioncheck" "coccicheck" "namespacecheck" "export_report")) nil [51301 51376])
            ("includecheck" function nil nil [51377 51530])
            ("versioncheck" function nil nil [51531 51683])
            ("coccicheck" function nil nil [51684 51739])
            ("namespacecheck" function nil nil [51740 51797])
            ("export_report" function nil nil [51798 51858])
            ("PHONY" variable (:default-value ("checkstack" "kernelrelease" "kernelversion" "image_name")) nil [51927 51986])
            ("CHECKSTACK_ARCH" variable (:default-value ("$(SUBARCH)")) nil [52253 52283])
            ("CHECKSTACK_ARCH" variable (:default-value ("$(ARCH)")) nil [52288 52315])
            ("checkstack" function nil nil [52321 52441])
            ("kernelrelease" function nil nil [52442 52548])
            ("kernelversion" function nil nil [52549 52588])
            ("image_name" function nil nil [52589 52624])
            ("tools/" function (:arguments ("FORCE")) nil [52683 52860])
            ("tools/%" function (:arguments ("FORCE")) nil [52861 53042])
            ("%.s" function (:arguments ("%.c" "prepare" "scripts" "FORCE")) nil [53697 53789])
            ("%.i" function (:arguments ("%.c" "prepare" "scripts" "FORCE")) nil [53789 53881])
            ("%.o" function (:arguments ("%.c" "prepare" "scripts" "FORCE")) nil [53881 53973])
            ("%.lst" function (:arguments ("%.c" "prepare" "scripts" "FORCE")) nil [53973 54067])
            ("%.s" function (:arguments ("%.S" "prepare" "scripts" "FORCE")) nil [54067 54159])
            ("%.o" function (:arguments ("%.S" "prepare" "scripts" "FORCE")) nil [54159 54251])
            ("%.symtypes" function (:arguments ("%.c" "prepare" "scripts" "FORCE")) nil [54251 54350])
            ("/" function (:arguments ("prepare" "scripts" "FORCE")) nil [54361 54485])
            ("Documentation/" function (:arguments ("headers_install")) nil [54544 54576])
            ("%/" function (:arguments ("prepare" "scripts" "FORCE")) nil [54576 54701])
            ("%.ko" function (:arguments ("prepare" "scripts" "FORCE")) nil [54701 54894])
            ("quiet_cmd_rmdirs" variable (:default-value ("$(if $(wildcard $(rm-dirs)),CLEAN   $(wildcard $(rm-dirs)))")) nil [55021 55100])
            ("quiet_cmd_rmfiles" variable (:default-value ("$(if $(wildcard $(rm-files)),CLEAN   $(wildcard $(rm-files)))")) nil [55138 55220])
            ("quiet_cmd_depmod" variable (:default-value ("DEPMOD" "$(KERNELRELEASE)")) nil [55324 55368])
            ("cmd_crmodverdir" variable (:default-value ("$(Q)mkdir" "-p" "$(MODVERDIR)" "$(if $(KBUILD_MODULES),; rm -f $(MODVERDIR)/*)")) nil [55632 55743])
            ("targets" variable (:default-value ("$(wildcard $(sort $(targets)))")) nil [55776 55818])
            ("cmd_files" variable (:default-value ("$(wildcard .*.cmd $(foreach f,$(targets),$(dir $(f)).$(notdir $(f)).cmd))")) nil [55818 55905])
            ("PHONY" variable (:default-value ("FORCE")) nil [56048 56063])
            ("FORCE" function nil nil [56063 56070]))          
      :file "Makefile"
      :pointmax 56230
      :fsize 56229
      :lastmodtime '(22567 40893 75240 272000)
      :unmatched-syntax nil))
  :file "!home!sefo!devel!boards!ZedBoard!linux!semantic.cache"
  :semantic-tag-version "2.0"
  :semanticdb-version "2.2")
