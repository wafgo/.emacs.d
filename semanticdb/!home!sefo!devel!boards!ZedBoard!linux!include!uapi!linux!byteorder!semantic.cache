;; Object byteorder/
;; SEMANTICDB Tags save file
(semanticdb-project-database-file "byteorder/"
  :tables
  (list
    (semanticdb-table "little_endian.h"
      :major-mode 'c-mode
      :tags 
        '( ("_UAPI_LINUX_BYTEORDER_LITTLE_ENDIAN_H" variable (:constant-flag t) nil [55 92])
            ("__LITTLE_ENDIAN" variable (:constant-flag t) nil [126 141])
            ("__LITTLE_ENDIAN_BITFIELD" variable (:constant-flag t) nil [195 219])
            ("linux/types.h" include (:system-flag t) nil [228 252])
            ("linux/swab.h" include (:system-flag t) nil [253 276])
            ("__constant_htonl" variable (:constant-flag t) nil [286 302])
            ("__constant_ntohl" variable (:constant-flag t) nil [356 372])
            ("__constant_htons" variable (:constant-flag t) nil [424 440])
            ("__constant_ntohs" variable (:constant-flag t) nil [494 510])
            ("__constant_cpu_to_le64" variable (:constant-flag t) nil [562 584])
            ("__constant_le64_to_cpu" variable (:constant-flag t) nil [625 647])
            ("__constant_cpu_to_le32" variable (:constant-flag t) nil [688 710])
            ("__constant_le32_to_cpu" variable (:constant-flag t) nil [751 773])
            ("__constant_cpu_to_le16" variable (:constant-flag t) nil [814 836])
            ("__constant_le16_to_cpu" variable (:constant-flag t) nil [877 899])
            ("__constant_cpu_to_be64" variable (:constant-flag t) nil [940 962])
            ("__constant_be64_to_cpu" variable (:constant-flag t) nil [1016 1038])
            ("__constant_cpu_to_be32" variable (:constant-flag t) nil [1097 1119])
            ("__constant_be32_to_cpu" variable (:constant-flag t) nil [1173 1195])
            ("__constant_cpu_to_be16" variable (:constant-flag t) nil [1254 1276])
            ("__constant_be16_to_cpu" variable (:constant-flag t) nil [1330 1352])
            ("__cpu_to_le64" variable (:constant-flag t) nil [1411 1424])
            ("__le64_to_cpu" variable (:constant-flag t) nil [1465 1478])
            ("__cpu_to_le32" variable (:constant-flag t) nil [1519 1532])
            ("__le32_to_cpu" variable (:constant-flag t) nil [1573 1586])
            ("__cpu_to_le16" variable (:constant-flag t) nil [1627 1640])
            ("__le16_to_cpu" variable (:constant-flag t) nil [1681 1694])
            ("__cpu_to_be64" variable (:constant-flag t) nil [1735 1748])
            ("__be64_to_cpu" variable (:constant-flag t) nil [1792 1805])
            ("__cpu_to_be32" variable (:constant-flag t) nil [1854 1867])
            ("__be32_to_cpu" variable (:constant-flag t) nil [1911 1924])
            ("__cpu_to_be16" variable (:constant-flag t) nil [1973 1986])
            ("__be16_to_cpu" variable (:constant-flag t) nil [2030 2043])
            ("__cpu_to_le64p" function
               (:arguments 
                  ( ("p" variable
                       (:pointer 1
                        :constant-flag t
                        :type ("__u64" type (:type "class") nil nil))
                        (reparse-symbol arg-sub-list) [2130 2145]))                  
                :type ("__le64" type (:type "class") nil nil))
                nil [2108 2177])
            ("__le64_to_cpup" function
               (:arguments 
                  ( ("p" variable
                       (:pointer 1
                        :constant-flag t
                        :type ("__le64" type (:type "class") nil nil))
                        (reparse-symbol arg-sub-list) [2222 2238]))                  
                :type ("__u64" type (:type "class") nil nil))
                nil [2201 2269])
            ("__cpu_to_le32p" function
               (:arguments 
                  ( ("p" variable
                       (:pointer 1
                        :constant-flag t
                        :type ("__u32" type (:type "class") nil nil))
                        (reparse-symbol arg-sub-list) [2315 2330]))                  
                :type ("__le32" type (:type "class") nil nil))
                nil [2293 2362])
            ("__le32_to_cpup" function
               (:arguments 
                  ( ("p" variable
                       (:pointer 1
                        :constant-flag t
                        :type ("__le32" type (:type "class") nil nil))
                        (reparse-symbol arg-sub-list) [2407 2423]))                  
                :type ("__u32" type (:type "class") nil nil))
                nil [2386 2454])
            ("__cpu_to_le16p" function
               (:arguments 
                  ( ("p" variable
                       (:pointer 1
                        :constant-flag t
                        :type ("__u16" type (:type "class") nil nil))
                        (reparse-symbol arg-sub-list) [2500 2515]))                  
                :type ("__le16" type (:type "class") nil nil))
                nil [2478 2547])
            ("__le16_to_cpup" function
               (:arguments 
                  ( ("p" variable
                       (:pointer 1
                        :constant-flag t
                        :type ("__le16" type (:type "class") nil nil))
                        (reparse-symbol arg-sub-list) [2592 2608]))                  
                :type ("__u16" type (:type "class") nil nil))
                nil [2571 2639])
            ("__cpu_to_be64p" function
               (:arguments 
                  ( ("p" variable
                       (:pointer 1
                        :constant-flag t
                        :type ("__u64" type (:type "class") nil nil))
                        (reparse-symbol arg-sub-list) [2685 2700]))                  
                :type ("__be64" type (:type "class") nil nil))
                nil [2663 2742])
            ("__be64_to_cpup" function
               (:arguments 
                  ( ("p" variable
                       (:pointer 1
                        :constant-flag t
                        :type ("__be64" type (:type "class") nil nil))
                        (reparse-symbol arg-sub-list) [2787 2803]))                  
                :type ("__u64" type (:type "class") nil nil))
                nil [2766 2838])
            ("__cpu_to_be32p" function
               (:arguments 
                  ( ("p" variable
                       (:pointer 1
                        :constant-flag t
                        :type ("__u32" type (:type "class") nil nil))
                        (reparse-symbol arg-sub-list) [2884 2899]))                  
                :type ("__be32" type (:type "class") nil nil))
                nil [2862 2941])
            ("__be32_to_cpup" function
               (:arguments 
                  ( ("p" variable
                       (:pointer 1
                        :constant-flag t
                        :type ("__be32" type (:type "class") nil nil))
                        (reparse-symbol arg-sub-list) [2986 3002]))                  
                :type ("__u32" type (:type "class") nil nil))
                nil [2965 3037])
            ("__cpu_to_be16p" function
               (:arguments 
                  ( ("p" variable
                       (:pointer 1
                        :constant-flag t
                        :type ("__u16" type (:type "class") nil nil))
                        (reparse-symbol arg-sub-list) [3083 3098]))                  
                :type ("__be16" type (:type "class") nil nil))
                nil [3061 3140])
            ("__be16_to_cpup" function
               (:arguments 
                  ( ("p" variable
                       (:pointer 1
                        :constant-flag t
                        :type ("__be16" type (:type "class") nil nil))
                        (reparse-symbol arg-sub-list) [3185 3201]))                  
                :type ("__u16" type (:type "class") nil nil))
                nil [3164 3236])
            ("__cpu_to_le64s" variable (:constant-flag t) nil [3245 3259])
            ("__le64_to_cpus" variable (:constant-flag t) nil [3299 3313])
            ("__cpu_to_le32s" variable (:constant-flag t) nil [3353 3367])
            ("__le32_to_cpus" variable (:constant-flag t) nil [3407 3421])
            ("__cpu_to_le16s" variable (:constant-flag t) nil [3461 3475])
            ("__le16_to_cpus" variable (:constant-flag t) nil [3515 3529])
            ("__cpu_to_be64s" variable (:constant-flag t) nil [3569 3583])
            ("__be64_to_cpus" variable (:constant-flag t) nil [3610 3624])
            ("__cpu_to_be32s" variable (:constant-flag t) nil [3651 3665])
            ("__be32_to_cpus" variable (:constant-flag t) nil [3692 3706])
            ("__cpu_to_be16s" variable (:constant-flag t) nil [3733 3747])
            ("__be16_to_cpus" variable (:constant-flag t) nil [3774 3788]))          
      :file "little_endian.h"
      :pointmax 3860
      :fsize 3859
      :lastmodtime '(22567 40897 810843 911000)
      :unmatched-syntax '((symbol "__inline" 3148 . 3163) (STATIC 3141 . 3147) (symbol "__inline" 3045 . 3060) (STATIC 3038 . 3044) (symbol "__inline" 2949 . 2964) (STATIC 2942 . 2948) (symbol "__inline" 2846 . 2861) (STATIC 2839 . 2845) (symbol "__inline" 2750 . 2765) (STATIC 2743 . 2749) (symbol "__inline" 2647 . 2662) (STATIC 2640 . 2646) (symbol "__inline" 2555 . 2570) (STATIC 2548 . 2554) (symbol "__inline" 2462 . 2477) (STATIC 2455 . 2461) (symbol "__inline" 2370 . 2385) (STATIC 2363 . 2369) (symbol "__inline" 2277 . 2292) (STATIC 2270 . 2276) (symbol "__inline" 2185 . 2200) (STATIC 2178 . 2184) (symbol "__inline" 2092 . 2107) (STATIC 2085 . 2091))
      :lexical-table 
        '(("__cpu_to_le32" (spp-arg-list ("x") 1532 . 1535) . ((semantic-list "((__force __le32)(__u32)(x))" 1536 . 1564)))
          ("__le64_to_cpu" (spp-arg-list ("x") 1478 . 1481) . ((semantic-list "((__force __u64)(__le64)(x))" 1482 . 1510)))
          ("__le16_to_cpu" (spp-arg-list ("x") 1694 . 1697) . ((semantic-list "((__force __u16)(__le16)(x))" 1698 . 1726)))
          ("__cpu_to_be64" (spp-arg-list ("x") 1748 . 1751) . ((semantic-list "((__force __be64)__swab64((x)))" 1752 . 1783)))
          ("__cpu_to_be16" (spp-arg-list ("x") 1986 . 1989) . ((semantic-list "((__force __be16)__swab16((x)))" 1990 . 2021)))
          ("__le64_to_cpus" (spp-arg-list ("x") 3313 . 3316) . 
              ((DO "do" 3317 . 3319) (semantic-list "{ (void)(x); }" 3320 . 3334) (WHILE "while" 3335 . 3340) (semantic-list "(0)" 3341 . 3344)))
          ("__le16_to_cpus" (spp-arg-list ("x") 3529 . 3532) . 
              ((DO "do" 3533 . 3535) (semantic-list "{ (void)(x); }" 3536 . 3550) (WHILE "while" 3551 . 3556) (semantic-list "(0)" 3557 . 3560)))
          ("__cpu_to_be64s" (spp-arg-list ("x") 3583 . 3586) . ((symbol "__swab64s" 3587 . 3596) (semantic-list "((x))" 3596 . 3601)))
          ("__cpu_to_be16s" (spp-arg-list ("x") 3747 . 3750) . ((symbol "__swab16s" 3751 . 3760) (semantic-list "((x))" 3760 . 3765)))
          ("__LITTLE_ENDIAN_BITFIELD")
          ("__constant_be64_to_cpu" (spp-arg-list ("x") 1038 . 1041) . ((symbol "___constant_swab64" 1042 . 1060) (semantic-list "((__force __u64)(__be64)(x))" 1060 . 1088)))
          ("__constant_be16_to_cpu" (spp-arg-list ("x") 1352 . 1355) . ((symbol "___constant_swab16" 1356 . 1374) (semantic-list "((__force __u16)(__be16)(x))" 1374 . 1402)))
          ("__be64_to_cpus" (spp-arg-list ("x") 3624 . 3627) . ((symbol "__swab64s" 3628 . 3637) (semantic-list "((x))" 3637 . 3642)))
          ("__be16_to_cpus" (spp-arg-list ("x") 3788 . 3791) . ((symbol "__swab16s" 3792 . 3801) (semantic-list "((x))" 3801 . 3806)))
          ("__constant_cpu_to_le64" (spp-arg-list ("x") 584 . 587) . ((semantic-list "((__force __le64)(__u64)(x))" 588 . 616)))
          ("__constant_cpu_to_le16" (spp-arg-list ("x") 836 . 839) . ((semantic-list "((__force __le16)(__u16)(x))" 840 . 868)))
          ("__cpu_to_be32" (spp-arg-list ("x") 1867 . 1870) . ((semantic-list "((__force __be32)__swab32((x)))" 1871 . 1902)))
          ("__be32_to_cpu" (spp-arg-list ("x") 1924 . 1927) . ((symbol "__swab32" 1928 . 1936) (semantic-list "((__force __u32)(__be32)(x))" 1936 . 1964)))
          ("__LITTLE_ENDIAN" . ((number "1234" 142 . 146)))
          ("__constant_htons" (spp-arg-list ("x") 440 . 443) . ((semantic-list "((__force __be16)___constant_swab16((x)))" 444 . 485)))
          ("__constant_ntohs" (spp-arg-list ("x") 510 . 513) . ((symbol "___constant_swab16" 514 . 532) (semantic-list "((__force __be16)(x))" 532 . 553)))
          ("__constant_cpu_to_le32" (spp-arg-list ("x") 710 . 713) . ((semantic-list "((__force __le32)(__u32)(x))" 714 . 742)))
          ("__cpu_to_le64s" (spp-arg-list ("x") 3259 . 3262) . 
              ((DO "do" 3263 . 3265) (semantic-list "{ (void)(x); }" 3266 . 3280) (WHILE "while" 3281 . 3286) (semantic-list "(0)" 3287 . 3290)))
          ("__cpu_to_le16s" (spp-arg-list ("x") 3475 . 3478) . 
              ((DO "do" 3479 . 3481) (semantic-list "{ (void)(x); }" 3482 . 3496) (WHILE "while" 3497 . 3502) (semantic-list "(0)" 3503 . 3506)))
          ("__constant_le64_to_cpu" (spp-arg-list ("x") 647 . 650) . ((semantic-list "((__force __u64)(__le64)(x))" 651 . 679)))
          ("__constant_le16_to_cpu" (spp-arg-list ("x") 899 . 902) . ((semantic-list "((__force __u16)(__le16)(x))" 903 . 931)))
          ("__constant_cpu_to_be64" (spp-arg-list ("x") 962 . 965) . ((semantic-list "((__force __be64)___constant_swab64((x)))" 966 . 1007)))
          ("__constant_cpu_to_be16" (spp-arg-list ("x") 1276 . 1279) . ((semantic-list "((__force __be16)___constant_swab16((x)))" 1280 . 1321)))
          ("__le32_to_cpus" (spp-arg-list ("x") 3421 . 3424) . 
              ((DO "do" 3425 . 3427) (semantic-list "{ (void)(x); }" 3428 . 3442) (WHILE "while" 3443 . 3448) (semantic-list "(0)" 3449 . 3452)))
          ("_UAPI_LINUX_BYTEORDER_LITTLE_ENDIAN_H")
          ("__le32_to_cpu" (spp-arg-list ("x") 1586 . 1589) . ((semantic-list "((__force __u32)(__le32)(x))" 1590 . 1618)))
          ("__cpu_to_be32s" (spp-arg-list ("x") 3665 . 3668) . ((symbol "__swab32s" 3669 . 3678) (semantic-list "((x))" 3678 . 3683)))
          ("__be32_to_cpus" (spp-arg-list ("x") 3706 . 3709) . ((symbol "__swab32s" 3710 . 3719) (semantic-list "((x))" 3719 . 3724)))
          ("__constant_cpu_to_be32" (spp-arg-list ("x") 1119 . 1122) . ((semantic-list "((__force __be32)___constant_swab32((x)))" 1123 . 1164)))
          ("__constant_be32_to_cpu" (spp-arg-list ("x") 1195 . 1198) . ((symbol "___constant_swab32" 1199 . 1217) (semantic-list "((__force __u32)(__be32)(x))" 1217 . 1245)))
          ("__be64_to_cpu" (spp-arg-list ("x") 1805 . 1808) . ((symbol "__swab64" 1809 . 1817) (semantic-list "((__force __u64)(__be64)(x))" 1817 . 1845)))
          ("__be16_to_cpu" (spp-arg-list ("x") 2043 . 2046) . ((symbol "__swab16" 2047 . 2055) (semantic-list "((__force __u16)(__be16)(x))" 2055 . 2083)))
          ("__constant_htonl" (spp-arg-list ("x") 302 . 305) . ((semantic-list "((__force __be32)___constant_swab32((x)))" 306 . 347)))
          ("__constant_ntohl" (spp-arg-list ("x") 372 . 375) . ((symbol "___constant_swab32" 376 . 394) (semantic-list "((__force __be32)(x))" 394 . 415)))
          ("__cpu_to_le64" (spp-arg-list ("x") 1424 . 1427) . ((semantic-list "((__force __le64)(__u64)(x))" 1428 . 1456)))
          ("__cpu_to_le16" (spp-arg-list ("x") 1640 . 1643) . ((semantic-list "((__force __le16)(__u16)(x))" 1644 . 1672)))
          ("__cpu_to_le32s" (spp-arg-list ("x") 3367 . 3370) . 
              ((DO "do" 3371 . 3373) (semantic-list "{ (void)(x); }" 3374 . 3388) (WHILE "while" 3389 . 3394) (semantic-list "(0)" 3395 . 3398)))
          ("__constant_le32_to_cpu" (spp-arg-list ("x") 773 . 776) . ((semantic-list "((__force __u32)(__le32)(x))" 777 . 805)))
          )
))
  :file "!home!sefo!devel!boards!ZedBoard!linux!include!uapi!linux!byteorder!semantic.cache"
  :semantic-tag-version "2.0"
  :semanticdb-version "2.2")
